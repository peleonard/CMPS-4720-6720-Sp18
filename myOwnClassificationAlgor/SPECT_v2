#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Feb 14 21:43:45 2018

@author: LZQ
"""

#%%
##import the data SPECT
import pandas as pd
import numpy as np
from decimal import *
#!cat SPECTtrain.txt
sp_names = ['F' + str(i) for i in range(23)]
sp_names[0] = 'diagnosis'
SP_train = pd.read_csv("SPECTtrain.txt", sep=",", names=sp_names)
SP_test = pd.read_csv("SPECTtest.txt", sep=",", names=sp_names)
SP_train.shape
SP_test.shape

#%%
## Perceptron Learning
SP_train.diagnosis.replace(0, -1, inplace = True)
SP_test.diagnosis.replace(0, -1, inplace = True)
# r is the learning rate and numEpochs is just the number of epochs 
def percepLearn_DF(X_train, y_train, X_test, y_test, r, numEpochs):
    w = np.zeros(X_train.shape[1])
    for t in range(numEpochs):
        for i, row in X_train.iterrows():
            if (np.dot(row, w)*y_train[i] <= 0):
                w = w + r*y_train[i]*row
    fit = X_test.dot(w)
    fit[fit<=0] = -1
    fit[fit>0] = 1
    
    E = np.sum(fit == y_test)/len(y_test)
    return [w, E]

weights, accuracyRate = percepLearn_DF(X_train = SP_train.iloc[:,1:23], 
                                       y_train = SP_train.iloc[:, 0], 
                                       X_test = SP_test.iloc[:,1:23], 
                                       y_test = SP_test.iloc[:,0], 
                                       r = .1, numEpochs=50)

print("Fitted weights of perceptron learning (with leanring rate 0.1 and numEpochs 50)"
      "is: \n {}".format(weights)+  "\n" + 
      "Accuracy rate is: {:.3f}".format(accuracyRate))

